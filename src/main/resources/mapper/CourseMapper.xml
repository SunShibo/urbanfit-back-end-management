<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.urbanfit.bem.dao.CourseDao">
    <sql id="limit">
        limit #{pageOffset}, #{pageSize}
    </sql>
    <!-- 添加课程信息 -->
    <insert id="addCourse" parameterType="com.urbanfit.bem.entity.Course"
            useGeneratedKeys="true" keyProperty="courseId">
        insert into t_course (courseType, introduce, userId, createTime) values (#{courseType}, #{introduce},
        #{userId}, now())
    </insert>

    <!-- 根据课程类型查询数据 -->
    <select id="queryCourseByType" parameterType="int" resultType="com.urbanfit.bem.entity.Course">
        select * from t_course where courseType = #{courseType}
    </select>
    <!-- 修改课程信息 -->
    <update id="updateCourse" parameterType="com.urbanfit.bem.entity.Course">
        update t_course set courseTitle = #{courseTitle}, coursePrice = #{coursePrice},
        courseDistrict = #{courseDistrict}, courseImageUrl = #{courseImageUrl}, introduce = #{introduce}
        where courseId = #{courseId}
    </update>

    <select id="queryCourseByCourseId" parameterType="int" resultType="com.urbanfit.bem.entity.Course">
        select * from t_course where courseId = #{courseId}
    </select>

    <update id="updateCourseStatus" parameterType="map">
        update t_course set status = #{status} where courseId = #{courseId}
    </update>

    <select id="queryUpCourseList" resultType="com.urbanfit.bem.entity.Course">
        select * from t_course where status = 0
    </select>

    <select id="queryUpCourseByCourseId" parameterType="int" resultType="com.urbanfit.bem.entity.Course">
        select * from t_course where courseId = #{courseId} and status = 0
    </select>

    <select id="queryStoreCourseCount" parameterType="map" resultType="int">
        select count(courseId) from t_course where storeId like CONCAT("%", #{storeId}, "%")
    </select>

    <select id="queryStoreCourseList" parameterType="map" resultType="com.urbanfit.bem.entity.Course">
        select * from t_course where storeId like CONCAT("%", #{storeId}, "%")
        order by createTime desc
        <include refid="limit"/>
    </select>

    <select id="queryCourseCount" parameterType="map" resultType="int">
        select count(m.courseId) from (select m.* from (select m.*, s.storeName, s.storeDistrict, s.storeAddress
        from t_course m left join t_course_store n on m.courseId = n.courseId left join t_store s
        on n.storeId = s.storeId where 1 = 1
        <if test="courseType != null">
            and m.courseType = #{courseType}
        </if>
        <if test="provice != null">
            and s.storeDistrict like CONCAT("%", #{provice}, "%")
        </if>
        <if test="city != null">
            and s.storeDistrict like CONCAT("%", #{city}, "%")
        </if>
        <if test="district != null">
            and s.storeDistrict like CONCAT("%", #{district}, "%")
        </if>
        ) m group by m.courseId) m
    </select>

    <select id="queryCourseList" parameterType="map" resultType="com.urbanfit.bem.entity.Course">
        select m.* from (select m.*, s.storeName, s.storeDistrict, s.storeAddress from t_course m left join
        t_course_store n on m.courseId = n.courseId left join t_store s on n.storeId = s.storeId where m.status = 0
        <if test="courseType != null">
            and m.courseType = #{courseType}
        </if>
        <if test="provice != null">
            and s.storeDistrict like CONCAT("%", #{provice}, "%")
        </if>
        <if test="city != null">
            and s.storeDistrict like CONCAT("%", #{city}, "%")
        </if>
        <if test="district != null">
            and s.storeDistrict like CONCAT("%", #{district}, "%")
        </if>
        ) m group by m.courseId order by m.createTime desc
        <include refid="limit"/>
    </select>
</mapper>